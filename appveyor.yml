build: false
platform:
  - x64
clone_folder: c:\projects\mitake-php

## Build matrix
environment:
  matrix:
  - dependencies: highest
    php_version: 7.0
  - dependencies: highest
    php_version: 7.1
  - dependencies: highest
    php_version: 7.2

  project_directory: c:\projects\mitake-php
  php_archive_directory: c:\tools\php-archive
  php_directory: c:\tools\php
  composer_directory: c:\tools\composer
  composer_executable: c:\tools\composer\composer.phar

cache:
  - c:\ProgramData\chocolatey\bin -> appveyor.yml
  - c:\ProgramData\chocolatey\lib -> appveyor.yml
  - c:\tools\composer
  - '%LOCALAPPDATA%\Composer'

init:
  - ps: $Env:PATH = $Env:php_directory + ';' + $Env:composer_directory + ';' + $Env:PATH
  - ps: $Env:ANSICON = '121x90 (121x90)'

install:
  # Install requested PHP version
  - ps: appveyor-retry cinst --params ('/InstallDir:' + $Env:php_directory) --ignore-checksums -y php --version ((choco search php --exact --all-versions -r | select-string -pattern $Env:php_version | sort { [version]($_ -split '\|' | select -last 1) } -Descending | Select-Object -first 1) -replace '[php|]','')
  - ps: cd $Env:php_directory
  - ps: Copy-Item php.ini-production -Destination php.ini
  - ps: Add-Content -Path php.ini -Value 'memory_limit=1G'
  - ps: Add-Content -Path php.ini -Value 'date.timezone="UTC"'
  - ps: Add-Content -Path php.ini -Value 'extension_dir=ext'
  - ps: Add-Content -Path php.ini -Value 'extension=php_curl.dll'
  - ps: Add-Content -Path php.ini -Value 'extension=php_intl.dll'
  - ps: Add-Content -Path php.ini -Value 'extension=php_mbstring.dll'
  - ps: Add-Content -Path php.ini -Value 'extension=php_openssl.dll'
  - ps: php --version

  # Prepare composer
  - ps: If ((Test-Path $Env:composer_directory) -eq $False) { New-Item -Path $Env:composer_directory -ItemType 'directory' }
  - ps: If ((Test-Path $Env:composer_executable) -eq $False) { appveyor-retry appveyor DownloadFile https://getcomposer.org/composer.phar -FileName $Env:composer_executable }
  - ps: Set-Content -Path ($Env:composer_directory + '\composer.bat') -Value ('@php ' + $Env:composer_executable + ' %*')
  - composer self-update

  # Install dependencies
  - ps: cd $Env:project_directory
  - IF %dependencies%==highest composer update --no-interaction --no-progress

test_script:
  - ps: cd $Env:project_directory
  - composer run cs-check
  - composer run coverage
  
